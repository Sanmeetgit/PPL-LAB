------------------------------------
B-4 Common Subexpression Elimination
------------------------------------

C code and Gimple output-

int main()                                                                            |main ()
{                                                                                     |{
        int a, b, c;                                                                  |  int D.1913;
        b = (a + c + b) * (c + a);                                                    |
        return b;                                                                     |  {
}                                                                                     |    int a;
~                                                                                     |    int b;
~                                                                                     |    int c;
~                                                                                     |
~                                                                                     |    _1 = a + c;
~                                                                                     |    _2 = b + _1;
~                                                                                     |    _3 = c + a;
~                                                                                     |    b = _2 * _3;
~                                                                                     |    D.1913 = b;
~                                                                                     |    return D.1913;
~                                                                                     |  }
~                                                                                     |  D.1913 = 0;
~                                                                                     |  return D.1913;
~                                                                                     |}
B-4.c                                                                                  B-4.c.005t.gimple

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ssa and fre1 output-
                                                                                      |
;; Function main (main, funcdef_no=0, decl_uid=1907, cgraph_uid=1, symbol_order=0)    |;; Function main (main, funcdef_no=0, decl_uid=1907, cgraph_uid=1, symbol_order=0)
                                                                                      |
main ()                                                                               |;; 1 loops found
{                                                                                     |;;
  int c;                                                                              |;; Loop 0
  int b;                                                                              |;;  header 0, latch 1
  int a;                                                                              |;;  depth 0, outer -1
  int _1;                                                                             |;;  nodes: 0 1 2
  int _2;                                                                             |;; 2 succs { 1 }
  int _3;                                                                             |main ()
  int _8;                                                                             |{
                                                                                      |  int c;
  <bb 2> :                                                                            |  int b;
  _1 = a_4(D) + c_5(D);                                                               |  int a;
  _2 = b_6(D) + _1;                                                                   |  int _1;
  _3 = c_5(D) + a_4(D);                                                               |  int _2;
  b_7 = _2 * _3;                                                                      |
  _8 = b_7;                                                                           |  <bb 2> :
  return _8;                                                                          |  _1 = a_4(D) + c_5(D);
                                                                                      |  _2 = _1 + b_6(D);
}                                                                                     |  b_7 = _1 * _2;
                                                                                      |  return b_7;
                                                                                      |
B-4.c.019t.ssa                                                                         B-4.c.033t.fre1

----------------------------------------------------------------------------------------------------------------------------------------------------------------
Answers-

Q1)
Twice, though the operands are in different orders.It is only computed once
after the FRE pass.FRE pass was able to  reuse the temporary variable which
stored the result of the intitial computation  of (a + c).

Q2)
We can check if there have been further optimisations by checking
B-4.c.*.optimized, which is the final file after optimisation. It appears
that redundant assignments have subsequently been eliminated

Q3)
"return  b" was  required to  make the  computation of  variable `b' meaningful.
Not returning b would result in its elimination as dead code, for example in
the case where `return b` is changed to `return 0`.